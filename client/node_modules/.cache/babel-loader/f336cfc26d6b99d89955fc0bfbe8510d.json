{"ast":null,"code":"var _jsxFileName = \"/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/MinionViewer/MinionViewer.js\";\nimport React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport './MinionViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MinionViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      minions: []\n    };\n    this.getMinions = this.getMinions.bind(this);\n  }\n\n  getMinions() {\n    fetch(`/api/minions`).then(res => res.json()).then(data => {\n      if (data.rowCount > 0) {\n        this.setState({\n          minions: data.rows\n        });\n      } else {\n        this.setState({\n          minions: []\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.getMinions();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.recentlyConjured) {\n      this.getMinions();\n      this.props.toggleRecentlyConjured();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MinionViewer\",\n      children: this.state.minions.map(minion => /*#__PURE__*/_jsxDEV(SmallStatBlock, {\n        conjure: this.conjures[minion.spell_source][minion.name]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MinionViewer;","map":{"version":3,"sources":["/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/MinionViewer/MinionViewer.js"],"names":["React","SmallStatBlock","MinionViewer","Component","constructor","props","state","minions","getMinions","bind","fetch","then","res","json","data","rowCount","setState","rows","componentDidMount","componentDidUpdate","prevProps","recentlyConjured","toggleRecentlyConjured","render","map","minion","conjures","spell_source","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,oBAAP;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,UAAU,GAAG;AACTE,IAAAA,KAAK,CAAE,cAAF,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,UAAGA,IAAI,CAACC,QAAL,GAAgB,CAAnB,EAAsB;AAClB,aAAKC,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEO,IAAI,CAACG;AAAhB,SAAd;AACH,OAFD,MAGK;AACD,aAAKD,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAE;AAAX,SAAd;AACH;AACJ,KATL;AAUH;;AAEDW,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,UAAL;AACH;;AAEDW,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKf,KAAL,CAAWgB,gBAAf,EAAiC;AAC7B,WAAKb,UAAL;AACA,WAAKH,KAAL,CAAWiB,sBAAX;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACK,KAAKjB,KAAL,CAAWC,OAAX,CAAmBiB,GAAnB,CAAwBC,MAAD,iBACpB,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKC,QAAL,CAAcD,MAAM,CAACE,YAArB,EAAmCF,MAAM,CAACG,IAA1C;AAAzB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxCsC;;AA2C3C,eAAe1B,YAAf","sourcesContent":["import React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport './MinionViewer.css';\n\nclass MinionViewer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { minions: [] }\n        this.getMinions = this.getMinions.bind(this);\n    }\n\n    getMinions() {\n        fetch(`/api/minions`)\n            .then((res) => res.json())\n            .then((data) => {\n                if(data.rowCount > 0) {\n                    this.setState({ minions: data.rows });\n                }\n                else {\n                    this.setState({ minions: [] });\n                }\n            })\n    }\n\n    componentDidMount() {\n        this.getMinions();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.recentlyConjured) {\n            this.getMinions();\n            this.props.toggleRecentlyConjured();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"MinionViewer\">\n                {this.state.minions.map((minion) => (\n                    <SmallStatBlock conjure={this.conjures[minion.spell_source][minion.name]}></SmallStatBlock>\n                ))}\n                \n            </div>\n        );\n    }\n}\n\nexport default MinionViewer;"]},"metadata":{},"sourceType":"module"}