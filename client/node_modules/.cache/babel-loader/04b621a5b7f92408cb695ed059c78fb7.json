{"ast":null,"code":"var _jsxFileName = \"/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js\";\nimport React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PossibleConjures extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: \"name\",\n      filterBy: \"name\",\n      filter: \"\"\n    };\n    this.conjureMinion = this.conjureMinion.bind(this);\n    this.handleSortChange = this.handleSortChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  conjureMinion(name, type, spellSource) {\n    console.log(type);\n    fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"name\": `${name}`,\n        \"type\": type,\n        \"spellSource\": spellSource\n      })\n    }).then(() => {\n      this.props.toggleRecentlyConjured();\n    });\n  }\n\n  handleSortChange(e) {\n    this.setState({\n      sort: e.target.value\n    });\n  }\n\n  handleFilterChange(e) {\n    this.setState({\n      filterBy: e.target.value\n    });\n  }\n\n  handleTextChange(e) {\n    this.setState({\n      filter: e.target.value\n    });\n  }\n\n  render() {\n    const unorderedConjures = this.props.conjures[this.props.selectedSpell];\n    const hasSubName = unorderedConjures[Object.keys(unorderedConjures)[0]].subName ? true : false;\n    let orderedConjures = Object.keys(unorderedConjures).sort((a, b) => {\n      const comp_a = unorderedConjures[a][this.state.sort];\n      const comp_b = unorderedConjures[b][this.state.sort];\n\n      if (typeof comp_a === \"number\") {\n        return comp_a - comp_b;\n      } else {\n        const crMap = {\n          \"1/8\": 0.125,\n          \"1/4\": 0.25,\n          \"1/2\": 0.5,\n          \"1\": 1,\n          \"2\": 2,\n          \"3\": 3,\n          \"4\": 4,\n          \"5\": 5,\n          \"6\": 6,\n          \"7\": 7,\n          \"8\": 8\n        };\n\n        if (comp_a in crMap) {\n          return crMap[comp_a] - crMap[comp_b];\n        } else {\n          if (comp_a < comp_b) {\n            return -1;\n          } else if (comp_a > comp_b) {\n            return 1;\n          } else {\n            return 0;\n          }\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PossibleConjuresContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterSort\",\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"sort-select-label\",\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"sort-select-label\",\n            id: \"sort-select\",\n            value: this.state.sort,\n            label: \"Sort by\",\n            onChange: this.handleSortChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), hasSubName ? /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"subName\",\n              children: \"Subname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 43\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"AC\",\n              children: \"AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"filter-select-label\",\n              children: \"Filter By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"filter-select-label\",\n              id: \"filter-select\",\n              value: this.state.filterBy,\n              label: \"Filter by\",\n              onChange: this.handleFilterChange,\n              sx: {\n                marginRight: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), hasSubName ? /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"subName\",\n                children: \"Subname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 47\n              }, this) : \"\", /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"AC\",\n                children: \"AC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"filter-textfield\",\n              label: \"Filter\",\n              variant: \"outlined\",\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PossibleConjures\",\n        children: orderedConjures.map(c => /*#__PURE__*/_jsxDEV(SmallStatBlock, {\n          conjure: this.props.conjures[this.props.selectedSpell][c],\n          onClick: () => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PossibleConjures;","map":{"version":3,"sources":["/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js"],"names":["React","SmallStatBlock","InputLabel","MenuItem","FormControl","Select","TextField","PossibleConjures","Component","constructor","props","state","sort","filterBy","filter","conjureMinion","bind","handleSortChange","handleFilterChange","handleTextChange","name","type","spellSource","console","log","fetch","headers","method","body","JSON","stringify","then","toggleRecentlyConjured","e","setState","target","value","render","unorderedConjures","conjures","selectedSpell","hasSubName","Object","keys","subName","orderedConjures","a","b","comp_a","comp_b","crMap","marginRight","map","c"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nclass PossibleConjures extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { sort: \"name\", filterBy: \"name\", filter: \"\" }\n        this.conjureMinion = this.conjureMinion.bind(this);\n        this.handleSortChange = this.handleSortChange.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n        this.handleTextChange = this.handleTextChange.bind(this);\n    }\n\n    conjureMinion(name, type, spellSource) {\n        console.log(type);\n        fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\"name\": `${name}`, \"type\": type, \"spellSource\": spellSource})\n        })\n        .then(() => {\n            this.props.toggleRecentlyConjured();\n        })\n    }\n\n    handleSortChange(e) {\n        this.setState({ sort: e.target.value })\n    }\n\n    handleFilterChange(e) {\n        this.setState({ filterBy: e.target.value})\n    }\n\n    handleTextChange(e) {\n        this.setState({ filter: e.target.value })\n    }\n\n    render() {\n        const unorderedConjures = this.props.conjures[this.props.selectedSpell];\n        const hasSubName = unorderedConjures[Object.keys(unorderedConjures)[0]].subName ? true : false;\n        \n        let orderedConjures = Object.keys(unorderedConjures).sort((a, b) => {\n            const comp_a = unorderedConjures[a][this.state.sort];\n            const comp_b = unorderedConjures[b][this.state.sort];\n            if (typeof comp_a === \"number\") {\n                return comp_a - comp_b;\n            }\n            else {\n                const crMap = {\n                    \"1/8\": 0.125,\n                    \"1/4\": 0.25,\n                    \"1/2\": 0.5,\n                    \"1\": 1,\n                    \"2\": 2,\n                    \"3\": 3,\n                    \"4\": 4,\n                    \"5\": 5,\n                    \"6\": 6,\n                    \"7\": 7,\n                    \"8\": 8,\n                }\n                if (comp_a in crMap) {\n                    return crMap[comp_a] - crMap[comp_b];\n                }\n                else {\n                    if (comp_a < comp_b) {\n                        return -1;\n                    } else if (comp_a > comp_b) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            }\n        });   \n        return (\n            <div className=\"PossibleConjuresContainer\">\n                <div className=\"filterSort\">\n                    <FormControl>\n                        <InputLabel id=\"sort-select-label\">Sort By</InputLabel>\n                        <Select\n                            labelId=\"sort-select-label\"\n                            id=\"sort-select\"\n                            value={this.state.sort}\n                            label=\"Sort by\"\n                            onChange={this.handleSortChange}\n                        >\n                            <MenuItem value=\"name\">Name</MenuItem>\n                            {hasSubName ? <MenuItem value=\"subName\">Subname</MenuItem> : \"\"}\n                            <MenuItem value=\"AC\">AC</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <div className=\"filters\">\n                        <FormControl>\n                            <InputLabel id=\"filter-select-label\">Filter By</InputLabel>\n                            <Select\n                                labelId=\"filter-select-label\"\n                                id=\"filter-select\"\n                                value={this.state.filterBy}\n                                label=\"Filter by\"\n                                onChange={this.handleFilterChange}\n                                sx={{ marginRight: \"10px\" }}\n                            >\n                                <MenuItem value=\"name\">Name</MenuItem>\n                                {hasSubName ? <MenuItem value=\"subName\">Subname</MenuItem> : \"\"}\n                                <MenuItem value=\"AC\">AC</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControl>\n                            <TextField id=\"filter-textfield\" label=\"Filter\" variant=\"outlined\" onChange={this.handleTextChange}/>\n                        </FormControl>\n                    </div>\n                </div>\n                <div className=\"PossibleConjures\">\n                    {orderedConjures.map((c) => (\n                        <SmallStatBlock key={c} conjure={this.props.conjures[this.props.selectedSpell][c]} onClick={() => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)}></SmallStatBlock>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PossibleConjures;"]},"metadata":{},"sourceType":"module"}