{"ast":null,"code":"var _jsxFileName = \"/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js\";\nimport React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PossibleConjures extends React.Component {\n  constructor(props) {\n    super(props);\n    this.conjureMinion = this.conjureMinion.bind(this);\n  }\n\n  conjureMinion(name, type, spellSource) {\n    console.log(type);\n    fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"name\": `${name}`,\n        \"type\": type,\n        \"spellSource\": spellSource\n      })\n    }).then(() => {\n      this.props.toggleRecentlyConjured();\n    });\n  }\n\n  render() {\n    console.log(this.props.conjures);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PossibleConjures\",\n      children: Object.keys(this.props.conjures[this.props.selectedSpell]).map(c => /*#__PURE__*/_jsxDEV(SmallStatBlock, {\n        conjure: this.props.conjures[this.props.selectedSpell][c],\n        onClick: () => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PossibleConjures;","map":{"version":3,"sources":["/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js"],"names":["React","SmallStatBlock","PossibleConjures","Component","constructor","props","conjureMinion","bind","name","type","spellSource","console","log","fetch","headers","method","body","JSON","stringify","then","toggleRecentlyConjured","render","conjures","Object","keys","selectedSpell","map","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAO,wBAAP;;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,aAAa,CAACE,IAAD,EAAOC,IAAP,EAAaC,WAAb,EAA0B;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,IAAAA,KAAK,CAAE,qBAAoBL,IAAK,SAAQC,IAAK,gBAAeC,WAAY,EAAnE,EAAsE;AACvEI,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAD8D;AAKvEC,MAAAA,MAAM,EAAE,MAL+D;AAMvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,gBAAS,GAAEV,IAAK,EAAjB;AAAoB,gBAAQC,IAA5B;AAAkC,uBAAeC;AAAjD,OAAf;AANiE,KAAtE,CAAL,CAQCS,IARD,CAQM,MAAM;AACR,WAAKd,KAAL,CAAWe,sBAAX;AACH,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACLV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWiB,QAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKC,MAAM,CAACC,IAAP,CAAY,KAAKnB,KAAL,CAAWiB,QAAX,CAAoB,KAAKjB,KAAL,CAAWoB,aAA/B,CAAZ,EAA2DC,GAA3D,CAAgEC,CAAD,iBAC5D,QAAC,cAAD;AAAwB,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWiB,QAAX,CAAoB,KAAKjB,KAAL,CAAWoB,aAA/B,EAA8CE,CAA9C,CAAjC;AAAmF,QAAA,OAAO,EAAE,MAAM,KAAKrB,aAAL,CAAmBqB,CAAnB,EAAsB,KAAKtB,KAAL,CAAWiB,QAAX,CAAoB,KAAKjB,KAAL,CAAWoB,aAA/B,EAA8CE,CAA9C,EAAiDlB,IAAvE,EAA6E,KAAKJ,KAAL,CAAWoB,aAAxF;AAAlG,SAAqBE,CAArB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA9B0C;;AAiC/C,eAAezB,gBAAf","sourcesContent":["import React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\n\nclass PossibleConjures extends React.Component {\n    constructor(props) {\n        super(props);\n        this.conjureMinion = this.conjureMinion.bind(this);\n    }\n\n    conjureMinion(name, type, spellSource) {\n        console.log(type);\n        fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\"name\": `${name}`, \"type\": type, \"spellSource\": spellSource})\n        })\n        .then(() => {\n            this.props.toggleRecentlyConjured();\n        })\n    }\n\n    render() {\n        console.log(this.props.conjures);\n        return (\n            <div className=\"PossibleConjures\">\n                {Object.keys(this.props.conjures[this.props.selectedSpell]).map((c) => (\n                    <SmallStatBlock key={c} conjure={this.props.conjures[this.props.selectedSpell][c]} onClick={() => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)}></SmallStatBlock>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default PossibleConjures;"]},"metadata":{},"sourceType":"module"}