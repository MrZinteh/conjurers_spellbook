{"ast":null,"code":"var _jsxFileName = \"/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js\";\nimport React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PossibleConjures extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: \"name\"\n    };\n    this.conjureMinion = this.conjureMinion.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  conjureMinion(name, type, spellSource) {\n    console.log(type);\n    fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        \"name\": `${name}`,\n        \"type\": type,\n        \"spellSource\": spellSource\n      })\n    }).then(() => {\n      this.props.toggleRecentlyConjured();\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      sort: e.target.value\n    });\n  }\n\n  render() {\n    const unorderedConjures = this.props.conjures[this.props.selectedSpell];\n    console.log(unorderedConjures);\n    const orderedConjures = Object.keys(unorderedConjures).sort().reduce((obj, key) => {\n      obj[key] = unorderedConjures[key];\n      return obj;\n    }, {});\n    console.log(orderedConjures);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PossibleConjures\",\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"sort-select-label\",\n          children: \"Sort By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"sort-select-label\",\n          id: \"sort-select\",\n          value: this.state.sort,\n          label: \"Sort by\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), unorderedConjures.subName ? /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"subName\",\n            children: \"Subname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 54\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), Object.keys(this.props.conjures[this.props.selectedSpell]).map(c => /*#__PURE__*/_jsxDEV(SmallStatBlock, {\n        conjure: this.props.conjures[this.props.selectedSpell][c],\n        onClick: () => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PossibleConjures;","map":{"version":3,"sources":["/home/phamerling/personal_projects/conjurers-spellbook/client/src/Components/PossibleConjures/PossibleConjures.js"],"names":["React","SmallStatBlock","InputLabel","MenuItem","FormControl","Select","PossibleConjures","Component","constructor","props","state","sort","conjureMinion","bind","handleChange","name","type","spellSource","console","log","fetch","headers","method","body","JSON","stringify","then","toggleRecentlyConjured","e","setState","target","value","render","unorderedConjures","conjures","selectedSpell","orderedConjures","Object","keys","reduce","obj","key","subName","map","c"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SmallStatBlock from \"../SmallStatBlock/SmallStatBlock\";\nimport \"./PossibleConjures.css\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nclass PossibleConjures extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { sort: \"name\" }\n        this.conjureMinion = this.conjureMinion.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    conjureMinion(name, type, spellSource) {\n        console.log(type);\n        fetch(`/api/minions?name=${name}&type=${type}&spellSource=${spellSource}`, {\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            method: \"POST\",\n            body: JSON.stringify({\"name\": `${name}`, \"type\": type, \"spellSource\": spellSource})\n        })\n        .then(() => {\n            this.props.toggleRecentlyConjured();\n        })\n    }\n\n    handleChange(e) {\n        this.setState({ sort: e.target.value })\n    }\n\n    render() {\n        const unorderedConjures = this.props.conjures[this.props.selectedSpell];\n        console.log(unorderedConjures);\n        const orderedConjures = Object.keys(unorderedConjures).sort().reduce(\n            (obj, key) => {\n                obj[key] = unorderedConjures[key];\n                return obj;\n            }, {}\n        );\n        console.log(orderedConjures);\n        return (\n            <div className=\"PossibleConjures\">\n                <FormControl fullWidth>\n                    <InputLabel id=\"sort-select-label\">Sort By</InputLabel>\n                    <Select\n                        labelId=\"sort-select-label\"\n                        id=\"sort-select\"\n                        value={this.state.sort}\n                        label=\"Sort by\"\n                        onChange={this.handleChange}\n                    >\n                        <MenuItem value=\"name\">Name</MenuItem>\n                        {unorderedConjures.subName ? <MenuItem value=\"subName\">Subname</MenuItem> : \"\"}\n                    </Select>\n                </FormControl>\n                {Object.keys(this.props.conjures[this.props.selectedSpell]).map((c) => (\n                    <SmallStatBlock key={c} conjure={this.props.conjures[this.props.selectedSpell][c]} onClick={() => this.conjureMinion(c, this.props.conjures[this.props.selectedSpell][c].type, this.props.selectedSpell)}></SmallStatBlock>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default PossibleConjures;"]},"metadata":{},"sourceType":"module"}